#ifndef SRC_COMMON_PARAMETERS_H_
#define SRC_COMMON_PARAMETERS_H_

#define VERSION "@PROJECT_VERSION@"
#define KERNEL_NAME "@KERNEL_NAME@"
#define DEFAULT_REPETITIONS @DEFAULT_REPETITIONS@
#define DEFAULT_MATRIX_SIZE @DEFAULT_MATRIX_SIZE@
#define DEFAULT_PLATFORM @DEFAULT_PLATFORM@
#define DEFAULT_DEVICE @DEFAULT_DEVICE@

/**
 * Kernel Parameters
 */
#define BLOCK_SIZE @BLOCK_SIZE@
#define GEMM_BLOCK @GEMM_BLOCK@
#define GLOBAL_MEM_UNROLL @GLOBAL_MEM_UNROLL@
#define INTEL_MUL_SHIFT_REG @INTEL_MUL_SHIFT_REG@

#define NUM_REPLICATIONS @NUM_REPLICATIONS@
#define HOST_DATA_TYPE @HOST_DATA_TYPE@
#define DEVICE_DATA_TYPE @DEVICE_DATA_TYPE@
#define DATA_TYPE_SIZE @DATA_TYPE_SIZE@

#cmakedefine USE_SVM
#cmakedefine USE_HBM
#cmakedefine XILINX_UNROLL_GLOBAL_MEM_PIPELINE
#cmakedefine ENABLE_MIXED_PRECISION

/*
Short description of the program
*/
#define PROGRAM_NAME "GEMM"

#define PROGRAM_DESCRIPTION "Implementation of the " PROGRAM_NAME " benchmark"\
                            " proposed in the HPCC benchmark adapted for FPGA\n"\
                            "Version: " VERSION "\n"

/**
Output separator
*/
#define HLINE "-------------------------------------------------------------\n"

#if DATA_TYPE_SIZE == 2
#ifdef ENABLE_MIXED_PRECISION
// In mixed precision the host uses single precision per default
#define HOST_DATA_TYPE cl_float
#else
// use a custom half precision data tpe that also allows basic arithmetic. The validation will still
// be done in single precision using BLAS - if available
#define HOST_DATA_TYPE half_float::half
#endif
#endif

#endif // SRC_COMMON_PARAMETERS_H_

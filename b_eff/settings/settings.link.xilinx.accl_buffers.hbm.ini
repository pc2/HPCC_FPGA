# /*******************************************************************************
#  Copyright (C) 2021 Xilinx, Inc
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# *******************************************************************************/
[connectivity]
# Define number of kernels and their name
nk=networklayer:1:networklayer_0
nk=ccl_offload:1:ccl_offload_0
nk=hostctrl:1:hostctrl_0
nk=cmac_0:1:cmac_0
nk=reduce_sum:1:arith_0
nk=hp_compression:3:compression_0_0.compression_0_1.compression_0_2
nk=loopback:1:lb_user_krnl

# Kernels Foorplaning
slr=compression_0_0:SLR1
slr=compression_0_1:SLR1
slr=compression_0_2:SLR1
slr=lb_user_krnl:SLR1
slr=arith_0:SLR1
slr=ccl_offload_0:SLR1
slr=hostctrl_0:SLR1
slr=networklayer_0:SLR2
slr=cmac_0:SLR2

sp=ccl_offload_0.m_axi_0:HBM[0:5]
sp=ccl_offload_0.m_axi_1:HBM[0:5]

# Connect host controllers to CCL Offload
stream_connect=hostctrl_0.cmd:ccl_offload_0.s_axis_call_req
stream_connect=ccl_offload_0.m_axis_call_ack:hostctrl_0.sts

# Connect CCL Offload kernel to UDP Network Kernel
stream_connect=ccl_offload_0.m_axis_eth_tx_data:networklayer_0.S_AXIS_sk2nl:512
stream_connect=networklayer_0.M_AXIS_nl2sk:ccl_offload_0.s_axis_eth_rx_data:512

# Connect UDP Network Kernel to CMAC Kernel
stream_connect=cmac_0.M_AXIS:networklayer_0.S_AXIS_eth2nl
stream_connect=networklayer_0.M_AXIS_nl2eth:cmac_0.S_AXIS

# arithmetic connections
stream_connect=ccl_offload_0.m_axis_arith_op0:arith_0.in0
stream_connect=ccl_offload_0.m_axis_arith_op1:arith_0.in1
stream_connect=arith_0.out_r:ccl_offload_0.s_axis_arith_res

# caster connections
stream_connect=ccl_offload_0.m_axis_compression0:compression_0_0.in_r
stream_connect=compression_0_0.out_r:ccl_offload_0.s_axis_compression0

stream_connect=ccl_offload_0.m_axis_compression1:compression_0_1.in_r
stream_connect=compression_0_1.out_r:ccl_offload_0.s_axis_compression1

stream_connect=ccl_offload_0.m_axis_compression2:compression_0_2.in_r
stream_connect=compression_0_2.out_r:ccl_offload_0.s_axis_compression2

# Tie off user kernel interface
stream_connect=ccl_offload_0.m_axis_krnl:lb_user_krnl.in
stream_connect=lb_user_krnl.out:ccl_offload_0.s_axis_krnl


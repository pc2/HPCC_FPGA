add_subdirectory(../../../shared ${CMAKE_BINARY_DIR}/lib/hpccbase)
set(HOST_SOURCE network_benchmark.cpp)
include_directories(${MPI_CXX_INCLUDE_PATH})

set(HOST_EXE_NAME Network)
set(LIB_NAME net_lib)

if (INTELFPGAOPENCL_FOUND)
    add_library(${LIB_NAME}_intel STATIC ${HOST_SOURCE})
    target_include_directories(${LIB_NAME}_intel PRIVATE ${HPCCBaseLibrary_INCLUDE_DIRS} ${CMAKE_BINARY_DIR}/src/common ${IntelFPGAOpenCL_INCLUDE_DIRS})
    target_include_directories(${LIB_NAME}_intel PUBLIC ${CMAKE_SOURCE_DIR}/src/host)
    add_executable(${HOST_EXE_NAME}_intel main.cpp)
    target_link_libraries(${LIB_NAME}_intel "${IntelFPGAOpenCL_LIBRARIES}" "${OpenMP_CXX_FLAGS}" ${MPI_LIBRARIES})
    target_link_libraries(${LIB_NAME}_intel hpcc_fpga_base)
    target_link_libraries(${HOST_EXE_NAME}_intel ${LIB_NAME}_intel)
    target_compile_definitions(${LIB_NAME}_intel PRIVATE -DINTEL_FPGA -D_USE_MPI_)
    target_compile_definitions(${HOST_EXE_NAME}_intel PRIVATE -DINTEL_FPGA)
    target_compile_options(${LIB_NAME}_intel PRIVATE "${OpenMP_CXX_FLAGS}")
    add_test(NAME test_intel_host_executable COMMAND $<TARGET_FILE:${HOST_EXE_NAME}_intel> -h)
endif()
if (Vitis_FOUND)
if (USE_ACCL)
    set(CMAKE_SKIP_BUILD_RPATH No)
    set(CMAKE_BUILD_WITH_INSTALL_RPATH Yes)
    list(APPEND CMAKE_INSTALL_RPATH ${CMAKE_BINARY_DIR}/lib/accl/lib)
    list(APPEND HOST_SOURCE ${CMAKE_SOURCE_DIR}/src/device/communication_ACCL_pl_stream.cpp 
                                ${CMAKE_SOURCE_DIR}/src/device/communication_ACCL_pl.cpp)
endif()
    add_library(${LIB_NAME}_xilinx STATIC ${HOST_SOURCE})
    target_include_directories(${LIB_NAME}_xilinx PRIVATE ${HPCCBaseLibrary_INCLUDE_DIRS} ${CMAKE_BINARY_DIR}/src/common ${Vitis_INCLUDE_DIRS})
    target_include_directories(${LIB_NAME}_xilinx PUBLIC ${CMAKE_SOURCE_DIR}/src/host)
    add_executable(${HOST_EXE_NAME}_xilinx main.cpp)
    target_link_libraries(${LIB_NAME}_xilinx ${Vitis_LIBRARIES} "${OpenMP_CXX_FLAGS}")
    target_link_libraries(${LIB_NAME}_xilinx hpcc_fpga_base)
if (USE_ACCL)
    target_link_libraries(${LIB_NAME}_xilinx accl)
    target_include_directories(${LIB_NAME}_xilinx PRIVATE ${ACCL_INCLUDE_PATH})
    target_link_libraries(${HOST_EXE_NAME}_xilinx zmqpp)
endif()
    target_link_libraries(${HOST_EXE_NAME}_xilinx ${LIB_NAME}_xilinx)
    target_compile_definitions(${LIB_NAME}_xilinx PRIVATE -DXILINX_FPGA)
    target_compile_definitions(${HOST_EXE_NAME}_xilinx PRIVATE -DXILINX_FPGA)
    target_compile_options(${LIB_NAME}_xilinx PRIVATE "${OpenMP_CXX_FLAGS}")
    add_test(NAME test_xilinx_host_executable COMMAND $<TARGET_FILE:${HOST_EXE_NAME}_xilinx> -h)
endif()
